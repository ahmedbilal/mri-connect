"""empty message

Revision ID: 7a2f27ca6ab8
Revises: 
Create Date: 2018-09-20 10:05:25.285149

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7a2f27ca6ab8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('field',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('method',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('person',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.Unicode(length=128), nullable=True),
    sa.Column('first_name', sa.Unicode(length=255), nullable=True),
    sa.Column('last_name', sa.Unicode(length=255), nullable=True),
    sa.Column('organisation', sa.Unicode(length=512), nullable=True),
    sa.Column('position', sa.Unicode(length=512), nullable=True),
    sa.Column('country', sa.Unicode(length=512), nullable=True),
    sa.Column('contact_email', sa.Unicode(length=255), nullable=True),
    sa.Column('personal_url', sa.Unicode(length=2048), nullable=True),
    sa.Column('biography', sa.UnicodeText(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('source_id')
    )
    op.create_table('range',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('gmba_id', sa.Unicode(length=32), nullable=True),
    sa.Column('name', sa.Unicode(length=255), nullable=True),
    sa.Column('countries', sa.Unicode(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('source_id')
    )
    op.create_table('resource',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('title', sa.Unicode(length=2048), nullable=True),
    sa.Column('url', sa.Unicode(length=2048), nullable=True),
    sa.Column('citation', sa.UnicodeText(), nullable=True),
    sa.Column('abstract', sa.UnicodeText(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('source_id')
    )
    op.create_table('scale',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('taxon',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Unicode(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('fields_people',
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('field_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['field_id'], ['field.id'], ),
    sa.ForeignKeyConstraint(['person_id'], ['person.id'], )
    )
    op.create_table('methods_people',
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('method_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['method_id'], ['method.id'], ),
    sa.ForeignKeyConstraint(['person_id'], ['person.id'], )
    )
    op.create_table('ranges_people',
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('range_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['person.id'], ),
    sa.ForeignKeyConstraint(['range_id'], ['range.id'], )
    )
    op.create_table('resources_people',
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['person.id'], ),
    sa.ForeignKeyConstraint(['resource_id'], ['resource.id'], )
    )
    op.create_table('scales_people',
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('scale_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['person.id'], ),
    sa.ForeignKeyConstraint(['scale_id'], ['scale.id'], )
    )
    op.create_table('taxa_people',
    sa.Column('person_id', sa.Integer(), nullable=True),
    sa.Column('taxon_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['person.id'], ),
    sa.ForeignKeyConstraint(['taxon_id'], ['taxon.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('taxa_people')
    op.drop_table('scales_people')
    op.drop_table('resources_people')
    op.drop_table('ranges_people')
    op.drop_table('methods_people')
    op.drop_table('fields_people')
    op.drop_table('taxon')
    op.drop_table('scale')
    op.drop_table('resource')
    op.drop_table('range')
    op.drop_table('person')
    op.drop_table('method')
    op.drop_table('field')
    # ### end Alembic commands ###
