# Generated by Django 3.1.2 on 2020-11-02 23:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import ra.base.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Expertise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='creation date and time')),
                ('lastmod', models.DateTimeField(db_index=True, verbose_name='last modification')),
                ('slug', models.SlugField(blank=True, help_text='For fast recall', unique=True, verbose_name='Identifier slug')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('title', models.CharField(max_length=256)),
                ('lastmod_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='people_expertise_lastmod_related', to=settings.AUTH_USER_MODEL, verbose_name='last modification by')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='people_expertise_related', to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'verbose_name': 'Expertise',
                'verbose_name_plural': 'Expertise',
            },
            bases=(ra.base.models.DiffingMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='creation date and time')),
                ('lastmod', models.DateTimeField(db_index=True, verbose_name='last modification')),
                ('slug', models.SlugField(blank=True, help_text='For fast recall', unique=True, verbose_name='Identifier slug')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('title', models.CharField(max_length=256)),
                ('lastmod_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='people_topic_lastmod_related', to=settings.AUTH_USER_MODEL, verbose_name='last modification by')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='people_topic_related', to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'verbose_name': 'Topic',
                'verbose_name_plural': 'Topics',
            },
            bases=(ra.base.models.DiffingMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='creation date and time')),
                ('lastmod', models.DateTimeField(db_index=True, verbose_name='last modification')),
                ('slug', models.SlugField(blank=True, help_text='For fast recall', unique=True, verbose_name='Identifier slug')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('orcid', models.CharField(help_text='ORCID is a persistent unique digital identifier that you own and control', max_length=128, unique=True)),
                ('last_name', models.CharField(max_length=128)),
                ('first_name', models.CharField(max_length=128)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('position', models.CharField(max_length=256)),
                ('title', models.CharField(max_length=64)),
                ('contact_email', models.CharField(max_length=256)),
                ('personal_urls', models.TextField()),
                ('upload_photo', models.FileField(upload_to='')),
                ('career_stage_choice', models.CharField(choices=[('UNDERGRAD', 'Undergraduate student (e.g. BSc/BA)'), ('POSTGRAD', 'Postgraduate student (Masters/PhD student)'), ('POSTDOC', 'Postdoc/Junior Researcher'), ('ACADEMIC', 'Academic (Senior Researcher, Professor)'), ('PUBLICSECTOR', 'Practitioner in the public/government sector'), ('PRIVATESECTOR', 'Practitioner or business in the private sector'), ('OTHER', 'Other (short text)')], max_length=16)),
                ('career_stage_note', models.CharField(max_length=256)),
                ('official_functions', models.TextField()),
                ('publications', models.TextField()),
                ('allow_ecr', models.BooleanField(help_text='Would you like to be added to the ECR list of the MRI (applies for ECRs, <5 years from graduation)')),
                ('allow_public', models.BooleanField(help_text='I allow publishing my profile on the web')),
                ('allow_photo', models.BooleanField(help_text='I allow publishing my photo on the web')),
                ('allow_contact', models.BooleanField(help_text='I allow MRI to contact me regarding my profile, as listed on the database, to link to and promote in its communications channels (website, social media, newsletter article).')),
                ('allow_registry', models.BooleanField(help_text='I would like to be added to an experts registry for internal use by the MRI Coordination Office to identify and connect with external requests for consultancies, expertise, provide inputs for policy briefs/policy reviews, speaking role, or interviews (such as by thor parties, journalists or collaborators of the MRI).')),
                ('allow_newsletter', models.BooleanField(help_text='I would like to receive monthly MRI Global Newsletters and Newsflashes from the MRI')),
                ('expertise', models.ManyToManyField(related_name='experts', to='people.Expertise')),
                ('lastmod_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='people_person_lastmod_related', to=settings.AUTH_USER_MODEL, verbose_name='last modification by')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='people_person_related', to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'People',
            },
            bases=(ra.base.models.DiffingMixin, models.Model),
        ),
        migrations.AddField(
            model_name='expertise',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='people.topic'),
        ),
    ]
