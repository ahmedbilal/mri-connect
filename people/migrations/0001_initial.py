# Generated by Django 3.1.2 on 2020-11-03 17:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import multiselectfield.db.fields
import ra.base.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='creation date and time')),
                ('lastmod', models.DateTimeField(db_index=True, verbose_name='last modification')),
                ('slug', models.SlugField(blank=True, help_text='For fast recall', unique=True, verbose_name='Identifier slug')),
                ('title', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('name', models.CharField(max_length=256)),
                ('street', models.CharField(max_length=256)),
                ('post_code', models.CharField(max_length=256)),
                ('city', models.CharField(max_length=256)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('lastmod_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='people_affiliation_lastmod_related', to=settings.AUTH_USER_MODEL, verbose_name='last modification by')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='people_affiliation_related', to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'abstract': False,
            },
            bases=(ra.base.models.DiffingMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Expertise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='creation date and time')),
                ('lastmod', models.DateTimeField(db_index=True, verbose_name='last modification')),
                ('slug', models.SlugField(blank=True, help_text='For fast recall', unique=True, verbose_name='Identifier slug')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('title', models.CharField(max_length=256)),
                ('lastmod_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='people_expertise_lastmod_related', to=settings.AUTH_USER_MODEL, verbose_name='last modification by')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='people_expertise_related', to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'verbose_name': 'Expertise',
                'verbose_name_plural': 'Expertise',
            },
            bases=(ra.base.models.DiffingMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='creation date and time')),
                ('lastmod', models.DateTimeField(db_index=True, verbose_name='last modification')),
                ('slug', models.SlugField(blank=True, help_text='For fast recall', unique=True, verbose_name='Identifier slug')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('title', models.CharField(max_length=256)),
                ('lastmod_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='people_topic_lastmod_related', to=settings.AUTH_USER_MODEL, verbose_name='last modification by')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='people_topic_related', to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'verbose_name': 'Topic',
                'verbose_name_plural': 'Topics',
            },
            bases=(ra.base.models.DiffingMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='creation date and time')),
                ('lastmod', models.DateTimeField(db_index=True, verbose_name='last modification')),
                ('slug', models.SlugField(blank=True, help_text='For fast recall', unique=True, verbose_name='Identifier slug')),
                ('title', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='Name')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('name', models.CharField(max_length=256)),
                ('acronym', models.CharField(max_length=16)),
                ('date_start', models.DateField()),
                ('date_ending', models.DateField()),
                ('funding', models.CharField(max_length=256)),
                ('role', models.CharField(max_length=256)),
                ('homepage', models.URLField()),
                ('location', models.TextField()),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('lastmod_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='people_project_lastmod_related', to=settings.AUTH_USER_MODEL, verbose_name='last modification by')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='people_project_related', to=settings.AUTH_USER_MODEL, verbose_name='owner')),
            ],
            options={
                'abstract': False,
            },
            bases=(ra.base.models.DiffingMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='creation date and time')),
                ('lastmod', models.DateTimeField(db_index=True, verbose_name='last modification')),
                ('slug', models.SlugField(blank=True, help_text='For fast recall', unique=True, verbose_name='Identifier slug')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('last_name', models.CharField(max_length=128)),
                ('first_name', models.CharField(max_length=128)),
                ('title', models.CharField(max_length=16)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('position', models.CharField(max_length=256)),
                ('contact_email', models.CharField(max_length=256)),
                ('career_stage', models.CharField(choices=[('UNDERGRAD', 'Undergraduate student (e.g. BSc/BA)'), ('POSTGRAD', 'Postgraduate student (Masters/PhD student)'), ('POSTDOC', 'Postdoc/Junior Researcher'), ('ACADEMIC', 'Academic (Senior Researcher, Professor)'), ('PUBLICSECTOR', 'Practitioner in the public/government sector'), ('PRIVATESECTOR', 'Practitioner or business in the private sector'), ('OTHER', 'Other (short text)')], max_length=16)),
                ('career_stage_note', models.CharField(max_length=256)),
                ('career_graduation', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2100)])),
                ('preferences', multiselectfield.db.fields.MultiSelectField(choices=[('join_ecr', 'Would you like to join the MRI Early Career Researchers (ECRs) fellows group? (applies to currently enrolled students, practitioners, or postgraduate/postdoctoral scholars up to 5 years since obtaining last degree)'), ('contact_me', 'I allow MRI to contact me regarding my profile, as listed on the database, to link to and promote in its communications channels (website, social media, newsletter article).'), ('expert_registry', 'I would like to be added to an experts registry for internal use by the MRI Coordination Office to identify and connect with external requests for consultancies, expertise, provide inputs for policy briefs/policy reviews, speaking role, or interviews (such as by third parties, journalists or collaborators of the MRI).'), ('newsletter', 'I would like to receive monthly MRI Global Newsletters and Newsflashes from the MRI')], max_length=46)),
                ('official_functions', models.TextField(help_text='Official functions that I hold in national and international programs, commissions, etc.')),
                ('upload_photo', models.FileField(upload_to='')),
                ('url_personal', models.URLField(help_text='Link to personal or professional homepage')),
                ('url_cv', models.URLField(help_text='Link to CV (e.g. LinkedIn)')),
                ('url_researchgate', models.URLField(help_text='Link to ResearchGate')),
                ('orcid', models.CharField(help_text='ORCID is a persistent unique digital identifier that you own and control', max_length=128, unique=True)),
                ('url_publications', models.URLField()),
                ('list_publications', models.TextField()),
                ('allow_public', models.BooleanField(help_text='I allow publishing my profile on the web')),
                ('allow_photo', models.BooleanField(help_text='I allow publishing my photo on the web')),
                ('affiliation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='people.affiliation')),
                ('disciplines', models.ManyToManyField(help_text='Disciplinary expertise topics', related_name='experts', to='people.Topic')),
                ('expertise', models.ManyToManyField(help_text='Research expertise', related_name='experts', to='people.Expertise')),
                ('lastmod_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='people_person_lastmod_related', to=settings.AUTH_USER_MODEL, verbose_name='last modification by')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='people_person_related', to=settings.AUTH_USER_MODEL, verbose_name='owner')),
                ('projects', models.ManyToManyField(related_name='experts', to='people.Project')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'People',
            },
            bases=(ra.base.models.DiffingMixin, models.Model),
        ),
        migrations.AddField(
            model_name='expertise',
            name='topic',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='people.topic'),
        ),
    ]
